# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Withdrawal {
  _id: String!
  amount: String!
  date: DateTime!
  paymentAddress: String!
  collectionID: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Earning {
  _id: String!
  amountEarned: String
  amountWithdrawn: String
  currentBalance: String
  paymentAddress: String
  collectionID: String!
  withdrawals: [Withdrawal!]!
}

type Setting {
  _id: String!
  paymentToken: String!
  dropType: String!
  dropAmount: Int
  draft: Boolean!
  mintStartDate: DateTime
  mintEndDate: DateTime
  collectionID: String!
}

type Collection {
  _id: String!
  imageLogo: String!
  description: String!
  contractAddress: String
  setting: Setting!
  earning: Earning!
  contractName: String!
  contractSymbol: String!
  deploymentChain: String!
  categories: [String!]!
  featuredImage: String
  showRarity: Boolean!
  isPublished: Boolean!
  creatorId: String!
}

type User {
  _id: String!
  name: String
  email: String
  walletAddress: String!
  userCollections: [Collection!]!
}

type Query {
  getHello: String!
  users: [User!]!

  """Find user by id"""
  userById(id: String!): User!

  """Find user by wallet address"""
  userByWalletAddress(address: String!): User!
  AllCollections: [Collection!]!
  collection(id: String!): Collection!
  collectionsByUserID(userId: String!): [Collection!]!
  collectionsByUserWalletAddress(walletAddress: String!): [Collection!]!
  setting(id: Int!): Setting!
  earnings: [Earning!]!
  earning(id: Int!): Earning!
}

type Mutation {
  updateUser(updateUserInput: UpdateUserInput!): User!
  removeUser(id: String!): User!
  createCollection(createCollectionInput: CreateCollectionInput!): Collection!
  updateCollection(updateCollectionInput: UpdateCollectionInput!): Collection!
  createSetting(createSettingInput: CreateSettingInput!): Setting!
  updateSetting(updateSettingInput: UpdateSettingInput!): Setting!
  removeSetting(id: Int!): Setting!
  updateEarning(updateEarningInput: UpdateEarningInput!): Earning!
  removeEarning(id: Int!): Earning!
}

input UpdateUserInput {
  walletAddress: String
  _id: String!
  email: String!
}

input CreateCollectionInput {
  userWalletAddress: String!
  contractSymbol: String!
  contractName: String!
  imageLogo: String!
  description: String!
}

input UpdateCollectionInput {
  userWalletAddress: String
  contractSymbol: String
  contractName: String
  imageLogo: String
  description: String!
  _id: String!
  name: String!
  image: String!
}

input CreateSettingInput {
  paymentToken: String! = "ETH"
  dropType: String! = "1"
  draft: Boolean! = true
  collectionID: String!
}

input UpdateSettingInput {
  _id: String!
  paymentToken: String
  dropType: String
  royalty: Float
  draft: Boolean
  mintStartDate: DateTime
  mintEndDate: DateTime
}

input UpdateEarningInput {
  collectionID: String
  id: Int!
}